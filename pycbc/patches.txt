--- setup.py	2016-06-02 23:47:01.000000000 -0400
+++ setup.patched.py	2016-06-03 08:40:15.000000000 -0400
@@ -105,13 +105,13 @@
         for f in self.clean_files:
             try:
                 os.unlink(f)
-                print 'removed {0}'.format(f)
+                print ('removed {0}'.format(f))
             except:
                 pass
 
         for fol in self.clean_folders:
             shutil.rmtree(fol, ignore_errors=True)
-            print 'removed {0}'.format(fol)
+            print ('removed {0}'.format(fol))
 
 class install(_install):
     def run(self):
@@ -125,11 +125,11 @@
                      "creating %s" % filename)
 
         env_file = open(filename, 'w')
-        print >> env_file, "# Source this file to access PyCBC"
-        print >> env_file, "PATH=" + self.install_scripts + ":$PATH"
-        print >> env_file, "PYTHONPATH=" + self.install_libbase + ":$PYTHONPATH"
-        print >> env_file, "export PYTHONPATH"
-        print >> env_file, "export PATH"
+        env_file.write("# Source this file to access PyCBC")
+        # env_file.write("PATH=" + self.install_scripts + ":$PATH")
+        # env_file.write("PYTHONPATH=" + self.install_libbase + ":$PYTHONPATH")
+        # env_file.write("export PYTHONPATH")
+        # env_file.write("export PATH")
         env_file.close()
 
         _install.run(self)
@@ -184,7 +184,7 @@
             test_results.append(result_str)
 
         for test in test_results:
-            print test
+            print (test)
 
 class test(Command):
     def has_cuda(self):
@@ -348,9 +348,9 @@
     keywords = ['ligo', 'physics', 'gravity', 'signal processing'],
     cmdclass = cmdclass,
     setup_requires = setup_requires,
-    extras_require = extras_require,
-    install_requires = install_requires,
-    dependency_links = links,
+    # extras_require = extras_require,
+    # install_requires = install_requires,
+    # dependency_links = links,
     scripts  = [
                'bin/minifollowups/pycbc_injection_minifollowup',
                'bin/minifollowups/pycbc_foreground_minifollowup',
